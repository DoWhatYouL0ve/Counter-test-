{"version":3,"sources":["counter/counterDisplay/display.tsx","counter/counterButton/button.tsx","counter/counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Display","props","className","value","undefined","Button","onClick","disabled","disabledValue","title","Counter","newValueCounter","resetValueCounter","App","useState","setValue","setDisabledValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAMaA,EAAU,SAACC,GACpB,OACI,qBAAKC,UAAW,UAAhB,SACI,oBAAIA,UAA2B,IAAhBD,EAAME,MAAc,WAAQC,EAA3C,SAAuDH,EAAME,WCD5DE,G,MAAS,SAACJ,GACnB,OACI,wBAAQK,QAASL,EAAMK,QAASC,SAAUN,EAAMO,cAAhD,SAAgEP,EAAMQ,UCEjEC,EAAU,SAACT,GAEpB,OACI,sBAAKC,UAAW,UAAhB,UACI,cAAC,EAAD,CAASC,MAAOF,EAAME,QACtB,sBAAKD,UAAW,gBAAhB,UACI,cAAC,EAAD,CAAQI,QAASL,EAAMU,gBACfH,cAA+B,IAAhBP,EAAME,MACrBM,MAAO,UACf,cAAC,EAAD,CAAQH,QAASL,EAAMW,kBACfJ,cAAeP,EAAMO,cACrBC,MAAO,iBCShBI,MA3Bf,WAAgB,IAAD,EAEeC,mBAAiB,GAFhC,mBAEJX,EAFI,KAEGY,EAFH,OAG+BD,oBAAkB,GAHjD,mBAGJN,EAHI,KAGWQ,EAHX,KAiBb,OACI,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,CAASU,kBAPa,WACtBG,EAAS,GACTC,GAAiB,IAMRb,MAAOA,EACPQ,gBAhBW,WAChBR,EAAQ,IACRY,EAASZ,EAAQ,GACjBa,GAAiB,KAcZR,cAAeA,OCbjBS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3a667cc8.chunk.js","sourcesContent":["import './display.modules.css'\r\n\r\ntype DisplayType = {\r\n    value: number\r\n}\r\n\r\nexport const Display = (props: DisplayType) => {\r\n    return (\r\n        <div className={'display'}>\r\n            <h2 className={props.value === 5 ? 'red' : undefined}>{props.value}</h2>\r\n        </div>\r\n    )\r\n\r\n}","import './button.modules.css'\r\n\r\ntype ButtonType = {\r\n    onClick: () => void\r\n    disabledValue?: boolean\r\n    title: string\r\n}\r\n\r\nexport const Button = (props: ButtonType) => {\r\n    return (\r\n        <button onClick={props.onClick} disabled={props.disabledValue}>{props.title}</button>\r\n    )\r\n}","import './counter.modules.css'\r\nimport {Display} from './counterDisplay/display'\r\nimport {Button} from \"./counterButton/button\";\r\n\r\n\r\ntype CounterType = {\r\n    resetValueCounter: () => void\r\n    value: number\r\n    newValueCounter: () => void\r\n    disabledValue: boolean\r\n}\r\n\r\nexport const Counter = (props: CounterType) => {\r\n\r\n    return (\r\n        <div className={'wrapper'}>\r\n            <Display value={props.value}/>\r\n            <div className={'buttonWrapper'}>\r\n                <Button onClick={props.newValueCounter}\r\n                        disabledValue={props.value === 5? true : false}\r\n                        title={'Raise'}/>\r\n                <Button onClick={props.resetValueCounter}\r\n                        disabledValue={props.disabledValue}\r\n                        title={'Reset'}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {Counter} from \"./counter/counter\";\n\n\nfunction App() {\n\n    const [value, setValue] = useState<number>(0)\n    const [disabledValue, setDisabledValue] = useState<boolean>(true)\n\n    const newValueCounter = () => {\n        if (value < 5)  {\n            setValue(value + 1)\n            setDisabledValue(false)\n        }\n    }\n\n    const resetValueCounter = () => {\n        setValue(0)\n        setDisabledValue(true)\n    }\n\n  return (\n      <div className=\"App\">\n        <Counter resetValueCounter={resetValueCounter}\n                 value={value}\n                 newValueCounter={newValueCounter}\n                 disabledValue={disabledValue}  />\n      </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}