{"version":3,"sources":["counter/counterButton/button.module.css","counter/counterDisplay/display.tsx","counter/counterButton/button.tsx","counter/store/counter-reducer.tsx","counter/counter.tsx","counter/setCounterRange/setCounterRange.tsx","App.tsx","reportWebVitals.ts","counter/store/store.ts","index.tsx","counter/setCounterRange/setCounterRange.module.css","counter/counterDisplay/display.module.css","counter/counter.module.css"],"names":["module","exports","Display","props","setGoodRange","rangeSetDisabled","className","s","display","value","maxCounterValue","red","undefined","error","Button","button","onClick","disabled","disabledValue","title","initialState","rangeValueStart","rangeValueMax","onFocusError","setRangeValueStartAC","type","setRangeValueMaxAC","setRangeSetDisabledAC","setValueAC","setDisabledValueAC","setMaxCounterValueAC","Counter","dispatch","useDispatch","useSelector","state","counterReducer","wrapper","displayWrapper","buttonWrapper","SetCounterRange","onFocus","chooseValueWrapper","valueWrapper","inputError","onChange","e","body","target","App","useEffect","getFromLocalStorageMinValue","localStorage","getItem","newValueMin","JSON","parse","getFromLocalStorageMaxValue","newValueMax","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71970d18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__1Zimu\"};","import s from './display.module.css'\r\nimport React from \"react\";\r\n\r\n\r\ntype DisplayType = {\r\n    value: number\r\n    maxCounterValue: number\r\n    setGoodRange: boolean\r\n    rangeSetDisabled: boolean\r\n}\r\n\r\nexport const Display = (props: DisplayType) => {\r\n\r\n    return (\r\n        <div>\r\n            {props.setGoodRange && props.rangeSetDisabled?\r\n                (<div className={s.display}>\r\n                    <span className={props.value === props.maxCounterValue ? s.red : undefined}>{props.value}</span>\r\n                </div>) : props.setGoodRange && !props.rangeSetDisabled ?\r\n                    (<div className={s.error}><p>enter values and press \"set\"</p></div>) :\r\n                    (<div className={s.error}><p className={s.red}>Incorrect value</p></div>)}\r\n        </div>\r\n    )\r\n}\r\n","import s from './button.module.css'\r\n\r\ntype ButtonType = {\r\n    onClick: () => void\r\n    disabledValue?: boolean\r\n    title: string\r\n}\r\n\r\nexport const Button = (props: ButtonType) => {\r\n    return (\r\n        <div>\r\n            <button className={s.button} onClick={props.onClick} disabled={props.disabledValue}>{props.title}</button>\r\n        </div>\r\n\r\n    )\r\n}","const SET_RANGE_VALUE_START = \"SET_RANGE_VALUE_START\"\r\nconst SET_RANGE_VALUE_MAX = \"SET_RANGE_VALUE_MAX\"\r\nconst SET_RANGE_SET_DISABLED = \"SET_RANGE_SET_DISABLED\"\r\nconst SET_ON_FOCUS_ERROR = \"SET_ON_FOCUS_ERROR\"\r\nconst SET_VALUE = \"SET_VALUE\"\r\nconst SET_DISABLED_VALUE = \"SET_DISABLED_VALUE\"\r\nconst SET_MAX_COUNTER_VALUE = \"SET_MAX_COUNTER_VALUE\"\r\n\r\n\r\nconst initialState = {\r\n    rangeValueStart: 0,\r\n    rangeValueMax: 1,\r\n    rangeSetDisabled: true,\r\n    onFocusError: false,\r\n    value: 0,\r\n    disabledValue: true,\r\n    maxCounterValue: 5\r\n}\r\n\r\ntype StateType = typeof initialState\r\n\r\nexport const counterReducer = (state: StateType = initialState, action: ActionsType): StateType => {\r\n    switch (action.type) {\r\n        case \"SET_RANGE_VALUE_START\":\r\n            return {...state, rangeValueStart: action.value}\r\n        case \"SET_RANGE_VALUE_MAX\":\r\n            return {...state, rangeValueMax: action.value}\r\n        case \"SET_RANGE_SET_DISABLED\":\r\n            return {...state, rangeSetDisabled: action.value}\r\n        case \"SET_ON_FOCUS_ERROR\":\r\n            return {...state, onFocusError: action.value}\r\n        case \"SET_VALUE\":\r\n            return {...state, value: action.value}\r\n        case \"SET_DISABLED_VALUE\":\r\n            return {...state, disabledValue: action.value}\r\n        case \"SET_MAX_COUNTER_VALUE\":\r\n            return {...state, maxCounterValue: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setRangeValueStartAC = (value: number) => ({type: SET_RANGE_VALUE_START, value} as const)\r\nexport const setRangeValueMaxAC = (value: number) => ({type: SET_RANGE_VALUE_MAX, value} as const)\r\nexport const setRangeSetDisabledAC = (value: boolean) => ({type: SET_RANGE_SET_DISABLED, value} as const)\r\nexport const setOnFocusErrorAC = (value: boolean) => ({type: SET_ON_FOCUS_ERROR, value} as const)\r\nexport const setValueAC = (value: number) => ({type: SET_VALUE, value} as const)\r\nexport const setDisabledValueAC = (value: boolean) => ({type: SET_DISABLED_VALUE, value} as const)\r\nexport const setMaxCounterValueAC = (value: number) => ({type: SET_MAX_COUNTER_VALUE, value} as const)\r\n\r\ntype  ActionsType = ReturnType<typeof setRangeValueStartAC> | ReturnType<typeof setRangeValueMaxAC> | ReturnType<typeof setRangeSetDisabledAC> | ReturnType<typeof setOnFocusErrorAC> | ReturnType<typeof setValueAC> | ReturnType<typeof setDisabledValueAC> | ReturnType<typeof setMaxCounterValueAC>\r\n","import s from './counter.module.css'\r\nimport {Display} from './counterDisplay/display'\r\nimport {Button} from \"./counterButton/button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./store/store\";\r\nimport {setDisabledValueAC, setValueAC} from \"./store/counter-reducer\";\r\n\r\n\r\ntype CounterType = {\r\n    setGoodRange: boolean\r\n}\r\n\r\nexport const Counter = (props: CounterType) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const rangeSetDisabled = useSelector<AppRootStateType, boolean>(state => state.counterReducer.rangeSetDisabled)\r\n    const value = useSelector<AppRootStateType, number>(state => state.counterReducer.value)\r\n    const disabledValue = useSelector<AppRootStateType, boolean>(state => state.counterReducer.disabledValue)\r\n    const maxCounterValue = useSelector<AppRootStateType, number>(state => state.counterReducer.maxCounterValue)\r\n    const rangeValueStart = useSelector<AppRootStateType, number>(state => state.counterReducer.rangeValueStart)\r\n\r\n    const newValueCounter = () => {\r\n        if (value < maxCounterValue)  {\r\n            dispatch(setValueAC(value + 1))\r\n            dispatch(setDisabledValueAC(false))\r\n        }\r\n    }\r\n\r\n    const resetValueCounter = () => {\r\n        dispatch(setValueAC(rangeValueStart))\r\n        dispatch(setDisabledValueAC(true))\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.displayWrapper}>\r\n                <Display value={value}\r\n                         maxCounterValue={maxCounterValue}\r\n                         setGoodRange={props.setGoodRange}\r\n                         rangeSetDisabled={rangeSetDisabled}\r\n                />\r\n            </div>\r\n            <div className={s.buttonWrapper}>\r\n                <Button onClick={newValueCounter}\r\n                        disabledValue={value === maxCounterValue || !rangeSetDisabled}\r\n                        title={'Raise'}/>\r\n                <Button onClick={resetValueCounter}\r\n                        disabledValue={disabledValue}\r\n                        title={'Reset'}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport s from './setCounterRange.module.css'\r\nimport {Button} from \"../counterButton/button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {\r\n    setMaxCounterValueAC,\r\n    setOnFocusErrorAC,\r\n    setRangeSetDisabledAC,\r\n    setRangeValueMaxAC,\r\n    setRangeValueStartAC, setValueAC\r\n} from \"../store/counter-reducer\";\r\n\r\ntype SetCounterRangeType = {\r\n    setGoodRange: boolean\r\n}\r\n\r\nexport const SetCounterRange = (props: SetCounterRangeType) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const rangeValueStart = useSelector<AppRootStateType, number>(state => state.counterReducer.rangeValueStart)\r\n    const rangeValueMax = useSelector<AppRootStateType, number>(state => state.counterReducer.rangeValueMax)\r\n    const rangeSetDisabled = useSelector<AppRootStateType, boolean>(state => state.counterReducer.rangeSetDisabled)\r\n    const onFocusError = useSelector<AppRootStateType, boolean>(state => state.counterReducer.onFocusError)\r\n\r\n    const onChangeMax = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let body = e.target.value\r\n        dispatch(setRangeValueMaxAC(+body))\r\n        dispatch(setRangeSetDisabledAC(false))\r\n    }\r\n\r\n    const onChangeStart = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let body = e.target.value\r\n        dispatch(setRangeValueStartAC(+body))\r\n        dispatch(setRangeSetDisabledAC(false))\r\n    }\r\n\r\n    const onFocus = () => {\r\n        dispatch(setOnFocusErrorAC(true))\r\n    }\r\n\r\n    const setRange = () => {\r\n        dispatch(setValueAC(rangeValueStart))\r\n        dispatch(setMaxCounterValueAC(rangeValueMax))\r\n        dispatch(setRangeSetDisabledAC(true))\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.chooseValueWrapper}>\r\n                <div className={s.valueWrapper}>\r\n                    <b>max value: </b>\r\n                    <input type={'number'} value={rangeValueMax} className={onFocusError && rangeValueMax <= rangeValueStart? s.inputError : undefined} onChange={onChangeMax} onFocus={onFocus}/>\r\n                </div>\r\n                <div className={s.valueWrapper}>\r\n                    <b>start value: </b>\r\n                    <input type={'number'} value={rangeValueStart} className={onFocusError && (rangeValueStart >= rangeValueMax || rangeValueStart) < 0 ? s.inputError : undefined} onChange={onChangeStart} onFocus={onFocus}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.buttonWrapper}>\r\n                <Button onClick={setRange}\r\n                        title={'Set'}\r\n                        disabledValue={!props.setGoodRange || rangeSetDisabled}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Counter} from \"./counter/counter\";\nimport {SetCounterRange} from './counter/setCounterRange/setCounterRange'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./counter/store/store\";\nimport {\n    setMaxCounterValueAC,\n    setRangeValueMaxAC,\n    setRangeValueStartAC, setValueAC\n} from \"./counter/store/counter-reducer\";\n\n\n\nfunction App() {\n\n    const dispatch = useDispatch()\n    const rangeValueStart = useSelector<AppRootStateType, number>(state => state.counterReducer.rangeValueStart)\n    const rangeValueMax = useSelector<AppRootStateType, number>(state => state.counterReducer.rangeValueMax)\n\n    const setGoodRange = rangeValueStart >= 0 && rangeValueMax > rangeValueStart\n\n    // localStorage\n\n    useEffect( () => {\n        let getFromLocalStorageMinValue = localStorage.getItem('minValue')\n\n        if (getFromLocalStorageMinValue) {\n            let newValueMin = JSON.parse(getFromLocalStorageMinValue)\n            dispatch(setRangeValueStartAC(newValueMin))\n            dispatch(setValueAC(newValueMin))\n        }\n\n    }, [dispatch])\n\n    useEffect( () => {\n        let getFromLocalStorageMaxValue = localStorage.getItem('maxValue')\n        if (getFromLocalStorageMaxValue) {\n            let newValueMax = JSON.parse(getFromLocalStorageMaxValue)\n            dispatch(setRangeValueMaxAC(newValueMax))\n            dispatch(setMaxCounterValueAC(newValueMax))\n        }\n    }, [dispatch])\n\n    useEffect( () => {\n        localStorage.setItem('minValue', JSON.stringify(rangeValueStart))\n        localStorage.setItem('maxValue', JSON.stringify(rangeValueMax))\n    }, [rangeValueStart, rangeValueMax])\n\n\n\n  return (\n      <div className=\"App\">\n          <div className={'counterWrapper'}>\n              <SetCounterRange setGoodRange={setGoodRange}\n              />\n              <Counter setGoodRange={setGoodRange}\n              />\n          </div>\n\n\n      </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {counterReducer} from \"./counter-reducer\";\r\n\r\nlet reducer = combineReducers( {\r\n    counterReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./counter/store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"setCounterRange_wrapper__-9_33\",\"chooseValueWrapper\":\"setCounterRange_chooseValueWrapper__1xRvw\",\"valueWrapper\":\"setCounterRange_valueWrapper__128vS\",\"inputError\":\"setCounterRange_inputError__3IcBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"display_display__256ay\",\"red\":\"display_red__2W7B4\",\"error\":\"display_error__2MTE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"counter_wrapper__E8Ers\",\"buttonWrapper\":\"counter_buttonWrapper__3kta4\",\"displayWrapper\":\"counter_displayWrapper__22bXI\"};"],"sourceRoot":""}