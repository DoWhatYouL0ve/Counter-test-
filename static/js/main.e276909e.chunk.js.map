{"version":3,"sources":["counter/counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Counter","useState","value","setValue","disabledValue","setDisabledValue","className","undefined","onClick","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGaA,EAAU,WAAO,IAAD,EACCC,mBAAS,GADV,mBAClBC,EADkB,KACXC,EADW,OAEiBF,oBAAS,GAF1B,mBAElBG,EAFkB,KAEHC,EAFG,KAkBzB,OACI,sBAAKC,UAAW,UAAhB,UACI,qBAAKA,UAAW,SAAhB,SACI,oBAAIA,UAAqB,IAAVJ,EAAc,WAAQK,EAArC,SAAiDL,MAErD,sBAAKI,UAAW,gBAAhB,UACI,wBAAQE,QApBI,WAChBN,EAAQ,IACRC,EAASD,EAAQ,GACjBG,GAAiB,KAiBb,mBACA,wBAAQG,QAdM,WACtBL,EAAS,GACTE,GAAiB,IAY2BI,SAAUL,EAA9C,0BChBDM,MARf,WACE,OACI,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,OCOOK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e276909e.chunk.js","sourcesContent":["import './counter.modules.css'\r\nimport {useState} from \"react\";\r\n\r\nexport const Counter = () => {\r\n    const [value, setValue] = useState(0)\r\n    const [disabledValue, setDisabledValue] = useState(true)\r\n\r\n    const newValueCounter = () => {\r\n        if (value < 5)  {\r\n            setValue(value + 1)\r\n            setDisabledValue(false)\r\n        }\r\n    }\r\n\r\n    const resetValueCounter = () => {\r\n        setValue(0)\r\n        setDisabledValue(true)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={'wrapper'}>\r\n            <div className={'amount'}>\r\n                <h2 className={value === 5 ? 'red' : undefined}>{value}</h2>\r\n            </div>\r\n            <div className={'buttonWrapper'}>\r\n                <button onClick={newValueCounter}>Raise</button>\r\n                <button onClick={resetValueCounter} disabled={disabledValue}>Reset</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Counter} from \"./counter/counter\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Counter />\n      </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}